# Generated by Django 5.1 on 2025-03-25 15:25

import django.core.validators
import django.db.models.deletion
import openid.enums
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ebsi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IssuanceInformation',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('include_ebsi_accreditations', models.BooleanField(default=False, verbose_name='Include EBSI accreditations')),
                ('credential_issuer_metadata', models.JSONField(blank=True, default=dict, max_length=22500, verbose_name='Credential Issuer Metadata')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='Timestamp')),
            ],
            options={
                'verbose_name': 'Issuance Information',
                'verbose_name_plural': 'Issuance Information',
            },
        ),
        migrations.CreateModel(
            name='NonceManager',
            fields=[
                ('nonce', models.CharField(max_length=2000, primary_key=True, serialize=False, verbose_name='Nonce')),
                ('state', models.JSONField(blank=True, null=True, verbose_name='State')),
            ],
            options={
                'verbose_name': 'Nonce Manager',
                'verbose_name_plural': 'Nonces Manager',
            },
        ),
        migrations.CreateModel(
            name='PresentationDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition_id', models.CharField(blank=True, max_length=2500, verbose_name='Identifier')),
                ('format', models.JSONField(blank=True, verbose_name='Format')),
                ('descriptors', models.JSONField(verbose_name='Input Descriptors')),
            ],
            options={
                'verbose_name': 'Presentation Definition',
                'verbose_name_plural': 'Presentation Definitions',
                'constraints': [models.UniqueConstraint(fields=('definition_id',), name='Definition ID already exists')],
            },
        ),
        migrations.CreateModel(
            name='IssuanceFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(default='openid', max_length=2000, verbose_name='Scope')),
                ('response_type', models.CharField(choices=[('vp_token', 'vp_token'), ('id_token', 'id_token')], default='id_token', max_length=100, verbose_name='Response Type')),
                ('is_deferred', models.BooleanField(default=False, verbose_name='Deferred')),
                ('credential_types', models.CharField(max_length=2000, verbose_name='Credential Type')),
                ('credential_schema_address', models.CharField(max_length=2000, verbose_name='Credential Schema')),
                ('revocation', models.CharField(blank=True, choices=[('status_list_2021', 'StatusList2021')], default=openid.enums.RevocationTypes['status_list_2021'], max_length=100, null=True, verbose_name='Type of revocation on EBSI')),
                ('expires_in', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Expires in (s)')),
                ('terms_of_use', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ebsi.ebsitermsofuse')),
                ('presentation_definition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='openid.presentationdefinition')),
            ],
            options={
                'verbose_name': 'Issuance Flow',
                'verbose_name_plural': 'Issuance Flows',
            },
        ),
        migrations.CreateModel(
            name='VerifyFlow',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('scope', models.CharField(max_length=2000, verbose_name='Scope')),
                ('response_type', models.CharField(choices=[('vp_token', 'vp_token'), ('id_token', 'id_token')], default='vp_token', max_length=100, verbose_name='Response Type')),
                ('presentation_definition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='openid.presentationdefinition')),
            ],
            options={
                'verbose_name': 'Verify Flow',
                'verbose_name_plural': 'Verify Flows',
                'constraints': [models.UniqueConstraint(fields=('scope',), name='This Scope is alredy defined')],
            },
        ),
    ]
